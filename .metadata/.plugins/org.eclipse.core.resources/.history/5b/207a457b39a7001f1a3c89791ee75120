package calculadora;

import java.awt.EventQueue;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CALCULADORA {

    private JFrame frame; // Marco principal de la ventana
    private JTextField textField; // Campo de texto para mostrar números y resultados
    private double num1, num2, result; // Variables para realizar las operaciones
    private String operator; // Operador matemático actual (+, -, *, /)

    /**
     * Método principal para lanzar la aplicación.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    CALCULADORA window = new CALCULADORA();
                    window.frame.setVisible(true); // Hacer visible la ventana
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Constructor de la calculadora.
     */
    public CALCULADORA() {
        initialize(); // Inicializa la interfaz gráfica
    }

    /**
     * Inicializa los componentes de la ventana.
     */
    private void initialize() {
        // Configuración de la ventana principal
        frame = new JFrame();
        frame.setBounds(100, 100, 400, 500); // Tamaño y posición de la ventana
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(null); // Layout absoluto para posicionar componentes

        // Campo de texto donde se muestran los números y el resultado
        textField = new JTextField();
        textField.setBounds(10, 10, 360, 50); // Posición y tamaño
        textField.setHorizontalAlignment(SwingConstants.RIGHT); // Alinear texto a la derecha
        textField.setFont(new Font("Arial", Font.PLAIN, 24)); // Fuente y tamaño
        textField.setEditable(false); // Campo de texto de solo lectura
        frame.getContentPane().add(textField);

        // Etiquetas de los botones (números y operadores)
        String[] buttonLabels = {
            "7", "8", "9", "/", 
            "4", "5", "6", "*", 
            "1", "2", "3", "-", 
            "C", "0", "=", "+"
        };

        // Coordenadas y tamaño inicial de los botones
        int x = 10, y = 80, width = 80, height = 60;

        // Crear y posicionar los botones en la ventana
        for (int i = 0; i < buttonLabels.length; i++) {
            JButton button = new JButton(buttonLabels[i]); // Crear botón con el texto correspondiente
            button.setFont(new Font("Arial", Font.PLAIN, 18)); // Estilo del botón
            button.setBounds(x, y, width, height); // Posición y tamaño del botón

            // Agregar un listener al botón para manejar eventos de clic
            button.addActionListener(new ButtonClickListener());

            frame.getContentPane().add(button); // Agregar botón al marco principal

            // Ajustar la posición del siguiente botón
            x += 90; // Mover posición horizontalmente
            if ((i + 1) % 4 == 0) { // Salto de línea cada 4 botones
                x = 10;
                y += 70;
            }
        }
    }

    /**
     * Clase interna para manejar los eventos de clic en los botones.
     */
    private class ButtonClickListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            String command = ((JButton) e.getSource()).getText(); // Obtener el texto del botón presionado

            // Si el botón presionado es un número
            if (command.matches("[0-9]")) {
                textField.setText(textField.getText() + command); // Concatenar número al texto existente
            } 
            // Si el botón presionado es "C" (limpiar)
            else if (command.equals("C")) {
                textField.setText(""); // Limpiar el campo de texto
                num1 = num2 = result = 0; // Reiniciar variables
                operator = ""; // Limpiar operador
            } 
            // Si el botón presionado es "=" (calcular resultado)
            else if (command.equals("=")) {
                num2 = Double.parseDouble(textField.getText()); // Leer el segundo número del campo de texto
                switch (operator) { // Realizar la operación correspondiente
                    case "+": result = num1 + num2; break;
                    case "-": result = num1 - num2; break;
                    case "*": result = num1 * num2; break;
                    case "/": 
                        if (num2 != 0) { // Verificar que no se divida entre 0
                            result = num1 / num2;
                        } else {
                            JOptionPane.showMessageDialog(frame, "No se puede dividir entre 0"); // Mostrar error
                            return;
                        }
                        break;
                }
                textField.setText(String.valueOf(result)); // Mostrar el resultado en el campo de texto
            } 
            // Si el botón presionado es un operador (+, -, *, /)
            else {
                operator = command; // Guardar el operador seleccionado
                num1 = Double.parseDouble(textField.getText()); // Leer el primer número
                textField.setText(""); // Limpiar el campo de texto para ingresar el segundo número
            }
        }
    }
}
